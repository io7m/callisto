<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright Â© 2017 <code@io7m.com> http://io7m.com

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted, provided that the above
  copyright notice and this permission notice appear in all copies.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
  SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
  IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-->

<xs:schema
  xmlns:c="urn:com.io7m.callisto.resources:1.0"
  targetNamespace="urn:com.io7m.callisto.resources:1.0"
  elementFormDefault="qualified"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:annotation>
    <xs:documentation>
      Element definitions for declaring resource bundles.
    </xs:documentation>
  </xs:annotation>

  <xs:simpleType name="resourceNameType">
    <xs:annotation>
      <xs:documentation>
        The type of resource names. Resource names may consist of letters,
        numbers, and the underscore, and must begin with a letter.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[\p{Ll}\p{Lu}][\p{Ll}\p{Lu}\p{Nd}_]*"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="resourceTypeNameType">
    <xs:annotation>
      <xs:documentation>
        The type of resource type names. Resource type names are a sequence
        of dot-separated names that may consist of lowercase letters, numbers,
        and the underscore. Each name segment must begin with a lowercase
        letter.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([\p{Ll}][\p{Ll}\p{Nd}_]*)(\.[\p{Ll}][\p{Ll}\p{Nd}_]*)*"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="resource">
    <xs:annotation>
      <xs:documentation>
        The declaration of a resource. A resource has a unique name within
        a package, a type, and a file path relative to the root of the
        containing bundle.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="name" type="c:resourceNameType" use="required"/>
      <xs:attribute name="type" type="c:resourceTypeNameType" use="required"/>
      <xs:attribute name="file" type="xs:anyURI" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name="packageNameType">
    <xs:annotation>
      <xs:documentation>
        The type of package names. Package names are a sequence of dot-separated
        names that may consist of lowercase letters, numbers, and the
        underscore. Each name must begin with a lowercase letter.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([\p{Ll}][\p{Ll}\p{Nd}_]*)(\.[\p{Ll}][\p{Ll}\p{Nd}_]*)*"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="package">
    <xs:annotation>
      <xs:documentation>
        The declaration of a package. A package contains a list of resources,
        each of which must be uniquely named within the package.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="c:resource"/>
      </xs:sequence>
      <xs:attribute name="name" type="c:packageNameType" use="required"/>
    </xs:complexType>
    <xs:unique name="resourceNamesAreUnique">
      <xs:selector xpath="c:resource"/>
      <xs:field xpath="@name"/>
    </xs:unique>
  </xs:element>

  <xs:element name="bundle">
    <xs:annotation>
      <xs:documentation>
        The declaration of a bundle. A bundle is a set of packages.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="c:package"/>
      </xs:sequence>
    </xs:complexType>
    <xs:unique name="packageNamesAreUnique">
      <xs:selector xpath="c:package"/>
      <xs:field xpath="@name"/>
    </xs:unique>
  </xs:element>

</xs:schema>
